'''
Challenge: The Minion Game
Difficulty: Medium
Topic: Python (Basic)
Max Score: 40
Success Rate: 86.75%
Task: Given a string, judge the winner of the minion game.
Problem: https://www.hackerrank.com/challenges/the-minion-game/problem
'''

# Imports
import os
import time
from profilehooks import profile
from io import StringIO

# Data
# raw_data = "BANANA" # Expected output: Stuart 12
# raw_data = "BAANANAS" # Expected output: Kevin 19
# raw_data = "ANANAS" # Expected output: Kevin 12
# raw_data = "BANAASA" # Expected output: Draw
raw_dataxpected output: Draw
# raw_data
    # Expected output: Stuart 7501500

# Simulate User Input
input = StringIO(raw_data)

# Solution
# TODO: Optimize


# Generate profile of funtion
filename = os.path.splitext(os.path.basename(__file__))[0]
@profile(stdout=False, filename=f'python/profiles/{filename}.prof')
# To view the profile, run: python -m snakeviz python/profiles/the_minion_game.prof

def minion_game(string):
    
    start_time_funtion = time.time()

    s_score, k_score = 0, 0
    for i in range(len(string)+1):
        for j in range(len(string)+1):
            if j > i and string[i:j+1] in string:
                if string[i] not in ['A', 'E', 'I', 'O', 'U']:
                    s_score += 1
                else:
                    k_score += 1

    if s_score == k_score:
        result = 'Draw'
    elif s_score > k_score:
        result = f'Stuart {s_score}'
    else:
        result = f'Kevin {k_score}'
    
    end_time_function = time.time()
    print(f"Execution time of function: {end_time_function - start_time_funtion} seconds")

    return print(result)

# Main
if __name__ == '__main__':
    s = input.readline()
    minion_game(s)